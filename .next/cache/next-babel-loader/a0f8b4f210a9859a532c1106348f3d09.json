{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\n\n/**\n * Koyok.e pervuma aku ngawe negeiki barang, kampret\n */\nimport axios from 'axios';\nvar isServer = false;\n/**\n * Error handle from rest api\n * @param {AxiosError} error\n * @return {AxiosError}\n */\n\nexport var handleException = function handleException(error) {\n  var errorMessage = '';\n\n  if (error.response) {\n    var data = error.response.data;\n\n    if (!data) {\n      errorMessage = 'Empty response!';\n    } else if (data.error.message) {\n      errorMessage = data.error.message;\n    } else {\n      errorMessage = 'Invalid error response!';\n    }\n  } else if (error.request) {\n    errorMessage = 'The request was made but no response, try check your connection';\n  } else {\n    errorMessage = error.message;\n  }\n\n  if (errorMessage) {\n    error.message = errorMessage;\n  }\n\n  return error;\n};\n/**\n * Run fetch local api\n *\n * @returns {AxiosInstance}\n */\n\nfunction requestApi() {\n  var params = {\n    baseURL: '/api'\n  };\n  var instance = axios.create(params);\n  instance.interceptors.response.use(function (response) {\n    return response;\n  }, function (error) {\n    var exceptions = handleException(error);\n\n    if (isServer) {\n      if (exceptions) {\n        delete exceptions.config;\n      }\n    }\n\n    return _Promise.reject(exceptions);\n  });\n  return instance;\n}\n\nexport default requestApi;","map":null,"metadata":{},"sourceType":"module"}