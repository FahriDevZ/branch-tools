{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport clsx from 'clsx';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport green from '@material-ui/core/colors/green';\nimport amber from '@material-ui/core/colors/amber';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nvar variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    success: {\n      backgroundColor: green[600]\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark\n    },\n    info: {\n      backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n      backgroundColor: amber[700]\n    },\n    icon: {\n      fontSize: 20\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1)\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    defaultColor: {\n      color: theme.palette.common.white\n    }\n  };\n});\n\nvar SnackbarContentWrapper = function SnackbarContentWrapper(props) {\n  var classes = useStyles();\n\n  var className = props.className,\n      message = props.message,\n      onClose = props.onClose,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"className\", \"message\", \"onClose\", \"variant\"]);\n\n  var Icon = variantIcon[variant];\n\n  var handleOnClose = function handleOnClose(event) {\n    if (onClose instanceof Function) {\n      onClose(event);\n    }\n  };\n\n  return __jsx(SnackbarContent, _extends({\n    className: clsx(classes.defaultColor, classes[variant], className),\n    \"aria-describedby\": 'client-snackbar',\n    message: __jsx(\"span\", {\n      id: 'client-snackbar',\n      className: classes.message\n    }, __jsx(Icon, {\n      className: clsx(classes.icon, classes.iconVariant)\n    }), message),\n    action: [__jsx(IconButton, {\n      key: 'close',\n      \"aria-label\": 'Close',\n      color: 'inherit',\n      onClick: handleOnClose\n    }, __jsx(CloseIcon, {\n      className: classes.icon\n    }))] // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, other));\n};\n\nexport default SnackbarContentWrapper;","map":null,"metadata":{},"sourceType":"module"}