{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Router from 'next/router';\nimport Head from 'next/head';\nimport qs from 'qs';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport IconLoop from '@material-ui/icons/Loop';\nimport IconVisibility from '@material-ui/icons/Visibility';\nimport IconVisibilityOff from '@material-ui/icons/VisibilityOff';\nimport SnackbarContentWrapper from '../scr/components/SnackbarContentWrapper';\nimport { connect } from 'react-redux';\nimport { setSession } from '../scr/redux/actions/session';\nimport requestApi from '../scr/requestApi';\n\nvar mapState = function mapState(state) {\n  return {\n    appConfig: state.appConfig\n  };\n};\n\nvar connector = connect(mapState);\nvar useStyles = makeStyles(function (theme) {\n  return {\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      marginLeft: -theme.spacing(1),\n      marginRight: -theme.spacing(1)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      paddingTop: theme.spacing(6),\n      paddingBottom: theme.spacing(5),\n      position: 'relative',\n      overflow: 'hidden'\n    },\n    img: {\n      position: 'absolute',\n      top: -15,\n      right: -30,\n      width: 173,\n      opacity: 0.8\n    },\n    '@keyframes animateTitle': {\n      '0%': {\n        transform: 'rotate(40deg) translateX(-162px)'\n      },\n      '20%': {\n        transform: 'rotate(10deg) translateX(-162px)'\n      },\n      '100%': {\n        transform: 'rotate(0deg) rotateY(0deg)'\n      }\n    },\n    animateTitle: {\n      'animation-name': '$animateTitle',\n      'animation-duration': '0.5s',\n      position: 'relative'\n    },\n    margin: {\n      margin: theme.spacing(1)\n    },\n    '@keyframes munyer': {\n      '0%': {\n        transform: 'rotate(0deg) rotateY(180deg)'\n      },\n      '100%': {\n        transform: 'rotate(360deg) rotateY(180deg)'\n      }\n    },\n    munyer: {\n      animation: '$munyer 0.8s linear infinite'\n    }\n  };\n});\n\nvar LoginPage = function LoginPage(_ref) {\n  var appConfig = _ref.appConfig,\n      dispatch = _ref.dispatch;\n  var classes = useStyles();\n  var initAlert = {\n    open: false,\n    message: '',\n    variant: 'warning'\n  };\n\n  var _React$useState = React.useState(initAlert),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      alert = _React$useState2[0],\n      setAlert = _React$useState2[1];\n\n  var _React$useState3 = React.useState({\n    password: ''\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      input = _React$useState4[0],\n      setInput = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      showPassword = _React$useState6[0],\n      setShowPassword = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      loading = _React$useState8[0],\n      setLoading = _React$useState8[1];\n\n  var handleChange = function handleChange(key) {\n    return function (event) {\n      var newInput = _objectSpread({}, input, _defineProperty({}, key, event.target.value));\n\n      setInput(newInput);\n    };\n  };\n\n  var handleClickShowPassword = function handleClickShowPassword() {\n    setShowPassword(!showPassword);\n  };\n\n  var handleSubmit = function handleSubmit(event) {\n    var request, response;\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            event.preventDefault();\n            setAlert(initAlert);\n            setLoading(true);\n            _context.prev = 3;\n            request = requestApi();\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(request({\n              method: 'post',\n              url: '/authenticate',\n              data: qs.stringify(input),\n              headers: {\n                'content-type': 'application/x-www-form-urlencoded;charset=utf-8'\n              }\n            }));\n\n          case 7:\n            response = _context.sent;\n            dispatch(setSession(response.data.data));\n            Router.push('/');\n            _context.next = 16;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](3);\n            setAlert({\n              open: true,\n              variant: 'error',\n              message: _context.t0.message\n            });\n            setLoading(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 12]], _Promise);\n  };\n\n  var handleClose = function handleClose() {\n    setAlert(initAlert);\n  };\n\n  return __jsx(Box, {\n    my: 8\n  }, __jsx(Head, null, __jsx(\"title\", null, appConfig.title)), __jsx(Paper, {\n    elevation: 3,\n    className: classes.paper\n  }, __jsx(\"img\", {\n    className: classes.img,\n    src: '/images/monggo.gif',\n    alt: 'Welcome'\n  }), __jsx(\"h1\", {\n    className: classes.animateTitle\n  }, \"Welcome Beb\"), __jsx(\"div\", {\n    style: {\n      position: 'relative'\n    }\n  }, alert && alert.open && __jsx(SnackbarContentWrapper, {\n    style: {\n      marginBottom: 10\n    },\n    onClose: handleClose,\n    variant: alert.variant,\n    message: alert.message\n  }), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    className: classes.container\n  }, __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.margin\n  }, __jsx(InputLabel, {\n    htmlFor: 'input-password'\n  }, \"Password\"), __jsx(Input, {\n    id: 'input-password',\n    type: showPassword ? 'text' : 'password',\n    value: input.password,\n    onChange: handleChange('password'),\n    autoComplete: 'off',\n    endAdornment: __jsx(InputAdornment, {\n      position: 'end'\n    }, __jsx(IconButton, {\n      color: 'default',\n      \"aria-label\": 'Toggle password visibility',\n      onClick: handleClickShowPassword\n    }, showPassword ? __jsx(IconVisibility, null) : __jsx(IconVisibilityOff, null)))\n  })), __jsx(FormControl, {\n    fullWidth: true,\n    className: classes.margin\n  }, __jsx(Button, {\n    variant: 'contained',\n    type: 'submit',\n    color: 'secondary',\n    disabled: loading\n  }, loading && __jsx(IconLoop, {\n    className: classes.munyer\n  }), \"Continue\"))))));\n};\n\nLoginPage.pageSize = 'sm';\nexport default connector(LoginPage);","map":null,"metadata":{},"sourceType":"module"}