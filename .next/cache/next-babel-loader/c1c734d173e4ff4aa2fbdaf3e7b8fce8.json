{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nconst useStyles = makeStyles(theme => ({\n  gutters: {\n    margin: theme.spacing(2)\n  },\n  center: {\n    textAlign: 'center',\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2)\n  },\n  circularIndeterminate: {\n    animation: '$mui-progress-circular-rotate 1s linear infinite'\n  },\n  '@keyframes mui-progress-circular-rotate': {\n    '100%': {\n      transform: 'rotate(360deg)'\n    }\n  }\n}));\n\nconst LoadingCircular = props => {\n  const classes = useStyles();\n\n  const {\n    classes: classesProps,\n    className: classNameProp,\n    style: styleProp,\n    disableGutters,\n    center,\n    color\n  } = props,\n        other = _objectWithoutProperties(props, [\"classes\", \"className\", \"style\", \"disableGutters\", \"center\", \"color\"]);\n\n  let classesProgress = {\n    indeterminate: classes.circularIndeterminate\n  };\n\n  if (classesProps) {\n    const {\n      indeterminate\n    } = classesProps,\n          otherClasses = _objectWithoutProperties(classesProps, [\"indeterminate\"]);\n\n    classesProgress = _objectSpread({}, classesProgress, {}, otherClasses);\n\n    if (indeterminate) {\n      classesProgress.indeterminate = clsx(classesProgress.indeterminate, indeterminate);\n    }\n  }\n\n  return __jsx(\"div\", {\n    style: styleProp,\n    className: clsx({\n      [classes.center]: center,\n      [classes.gutters]: !disableGutters\n    }, classNameProp)\n  }, __jsx(CircularProgress, _extends({\n    size: 55,\n    color: color || 'secondary',\n    classes: classesProgress // eslint-disable-next-line react/jsx-props-no-spreading\n\n  }, other)));\n};\n\nexport default LoadingCircular;","map":null,"metadata":{},"sourceType":"module"}